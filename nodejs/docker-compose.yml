---
version: "3.8"
services:
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    env_file: .env
    environment:
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./data:/var/lib/postgresql/data
    ports:
      - ${HOST}:${POSTGRES_PORT}:5432
    networks:
      - nodenet

  nodejs:
    build:
      context: .
      dockerfile: ./docker/node/Dockerfile
    image: nodejs
    container_name: nodejs
    restart: "no"
    env_file: .env
    environment:
      - POSTGRES_USERNAME=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - DATABASE_URL=postgres://${POSTGRES_USERNAME}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/mydb
    ports:
      - ${HOST}:${NODE_PORT}:3000
    volumes:
      - ./app:/app
      # - ./node_modules:/node_modules
    networks:
      - nodenet
    depends_on:
      - postgres
      - keycloak
    links:
      - keycloak

  keycloak:
  # More info in:
  # - https://dev.to/kurybr/keycloak-1901-mysql-dockercompose-como-configurar-3an9
  # - https://www.keycloak.org/server/containers
  # - https://www.mastertheboss.com/keycloak/keycloak-with-docker/
    image: quay.io/keycloak/keycloak:21.1.1
    # Use this to additional configurations
    # build:
    #   context: .
    #   dockerfile: docker/keycloak/Dockerfile
    container_name: keycloak
    restart: always
    env_file: .env
    environment:
      - KC_DB=postgres
      - KC_DB_URL_HOST=postgres
      - KC_DB_URL_DATABASE=postgres
      - KC_DB_URL_PORT=${POSTGRES_PORT}
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
      - KC_DB_USERNAME=${POSTGRES_USERNAME}
      - KC_DB_PASSWORD=${POSTGRES_PASSWORD}
      - KC_LOG_LEVEL=INFO # Change if you want to have more log levels
    ports:
      - ${HOST}:${KEYCLOAK_PORT}:8080
    command: start-dev --features=preview
    volumes:
      - ./keycloak:/opt/keycloak/data/
    depends_on:
      - postgres
    networks:
      - nodenet
networks:
  nodenet:
    driver: bridge
